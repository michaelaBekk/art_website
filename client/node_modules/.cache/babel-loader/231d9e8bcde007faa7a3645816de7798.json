{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bekke\\\\Documents\\\\Art Website\\\\client\\\\src\\\\Password\\\\reset_password.js\";\nimport React, { Component } from 'react';\nimport './reset_password.css';\nimport { createBrowserHistory } from 'history';\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.showHidePassword = this.showPassword.bind(this);\n    this.hidePassword = this.hidePassword.bind(this);\n    this.showConfirmPassword = this.showConfirmPassword.bind(this);\n    this.hideConfirmPassword = this.hideConfirmPassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      password: '',\n      confirmed_password: '',\n      password_errors: '',\n      confirmed_password_errors: '',\n      passwords_match: ''\n    };\n  } //Show/Hide Passwords -------------------\n\n\n  showPassword() {\n    const passwordInput = document.querySelector('.change-password');\n    const showPasswordIcon = document.querySelector('.fa-eye');\n    const hidePasswordIcon = document.querySelector('.fa-eye-slash');\n    passwordInput.setAttribute('type', 'text');\n    showPasswordIcon.style.display = \"none\";\n    hidePasswordIcon.style.display = \"block\";\n  }\n\n  hidePassword() {\n    const passwordInput = document.querySelector('.change-password');\n    const showPasswordIcon = document.querySelector('.fa-eye');\n    const hidePasswordIcon = document.querySelector('.fa-eye-slash');\n    passwordInput.setAttribute('type', 'password');\n    showPasswordIcon.style.display = \"block\";\n    hidePasswordIcon.style.display = \"none\";\n  }\n\n  showConfirmPassword() {\n    const confirmPasswordInput = document.querySelector('.change-password-confirm');\n    const showPasswordIcon = document.querySelector('.fa-eye-confirm');\n    const hidePasswordIcon = document.querySelector('.fa-eye-slash-confirm');\n    confirmPasswordInput.setAttribute('type', 'text');\n    showPasswordIcon.style.display = \"none\";\n    hidePasswordIcon.style.display = \"block\";\n  }\n\n  hideConfirmPassword() {\n    const confirmPasswordInput = document.querySelector('.change-password-confirm');\n    const showPasswordIcon = document.querySelector('.fa-eye-confirm');\n    const hidePasswordIcon = document.querySelector('.fa-eye-slash-confirm');\n    confirmPasswordInput.setAttribute('type', 'password');\n    showPasswordIcon.style.display = \"block\";\n    hidePasswordIcon.style.display = \"none\";\n  } // Handle Submit -------------------------\n\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const history = createBrowserHistory();\n    const new_password = {\n      password: this.state.password,\n      confirmed_password: this.state.confirmed_password\n    };\n    const user_ID = localStorage.getItem('user_ID');\n    const response = await fetch('http://localhost:8080/reset-password/new-password/' + user_ID, {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(new_password)\n    }).catch(err => {\n      if (err.response.status == 404) {\n        history.push('/error404/not_found');\n        window.location.reload();\n      } else if (err.response.status == 500) {\n        history.push('/error500/internal_server_error');\n        window.location.reload();\n      } else {\n        history.push('/error');\n        window.location.reload();\n      }\n    });\n    const data = await response.json();\n    const password = document.querySelector('.change-password');\n    const confirmed_password = document.querySelector('.change-password-confirm');\n\n    if (data.password) {\n      password.classList.add('missing-field');\n      this.setState({\n        password_errors: data.password.msg\n      });\n    }\n\n    if (data.confirmed_password) {\n      confirmed_password.classList.add('missing-field');\n      this.setState({\n        confirmed_password_errors: data.confirmed_password.msg\n      });\n    }\n\n    if (data.no_match) {\n      password.classList.add('missing-field');\n      confirmed_password.classList.add('missing-field');\n      this.setState({\n        passwords_match: data.no_match\n      });\n    }\n\n    if (data.message == 'Password Updated') {\n      history.push('/reset-password/new-password/successfully-reset/' + user_ID);\n      window.location.reload();\n    }\n  }\n\n  handleChange(e) {\n    const password = document.querySelector('.change-password');\n    const confirmed_password = document.querySelector('.change-password-confirm');\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    if (e.target.name == 'password') {\n      this.setState({\n        password_errors: ''\n      });\n      this.setState({\n        passwords_match: ''\n      });\n      password.classList.remove('missing-field');\n      confirmed_password.classList.remove('missing-field');\n    }\n\n    if (e.target.name == 'confirmed_password') {\n      this.setState({\n        confirmed_password_errors: ''\n      });\n      this.setState({\n        passwords_match: ''\n      });\n      password.classList.remove('missing-field');\n      confirmed_password.classList.remove('missing-field');\n    }\n  }\n\n  render() {\n    document.body.style.background = \"#adebad\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto\",\n      style: {\n        width: 420 + 'px',\n        marginTop: 100 + 'px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"change-password-title\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"change-password-subtitle\",\n        children: \" Type in a new password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        autoComplete: \"off\",\n        className: \"form-group\",\n        id: \"resetForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-eye\",\n          onClick: this.showPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-eye-slash\",\n          id: \"hidePassword\",\n          onClick: this.hidePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          className: \"form-control change-password\",\n          id: \"exampleInputPassword1\",\n          placeholder: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-field\",\n          children: this.state.password_errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-eye fa-eye-confirm\",\n          onClick: this.showConfirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-eye-slash fa-eye-slash-confirm\",\n          id: \"hidePassword\",\n          onClick: this.hideConfirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmed_password\",\n          value: this.state.confirmed_password,\n          onChange: this.handleChange,\n          className: \"form-control change-password-confirm\",\n          id: \"exampleInputPassword1\",\n          placeholder: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-field\",\n          children: this.state.confirmed_password_errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-field\",\n          children: this.state.passwords_match\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success\",\n          id: \"resetBtn\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/bekke/Documents/Art Website/client/src/Password/reset_password.js"],"names":["React","Component","createBrowserHistory","ResetPassword","constructor","showHidePassword","showPassword","bind","hidePassword","showConfirmPassword","hideConfirmPassword","handleSubmit","handleChange","state","password","confirmed_password","password_errors","confirmed_password_errors","passwords_match","passwordInput","document","querySelector","showPasswordIcon","hidePasswordIcon","setAttribute","style","display","confirmPasswordInput","e","preventDefault","history","new_password","user_ID","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","catch","err","status","push","window","location","reload","data","json","classList","add","setState","msg","no_match","message","target","name","value","remove","render","background","width","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './reset_password.css';\r\nimport {createBrowserHistory} from 'history';\r\n\r\n\r\nclass ResetPassword extends Component {\r\n    constructor() {\r\n        super();\r\n        this.showHidePassword = this.showPassword.bind(this);\r\n        this.hidePassword = this.hidePassword.bind(this);\r\n        this.showConfirmPassword = this.showConfirmPassword.bind(this);\r\n        this.hideConfirmPassword = this.hideConfirmPassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            password: '',\r\n            confirmed_password: '',\r\n            password_errors: '',\r\n            confirmed_password_errors: '',\r\n            passwords_match: ''\r\n        }\r\n    }\r\n\r\n    //Show/Hide Passwords -------------------\r\n    showPassword() {\r\n        const passwordInput = document.querySelector('.change-password');\r\n        const showPasswordIcon = document.querySelector('.fa-eye');\r\n        const hidePasswordIcon = document.querySelector('.fa-eye-slash');\r\n        passwordInput.setAttribute('type', 'text');\r\n        showPasswordIcon.style.display = \"none\";\r\n        hidePasswordIcon.style.display = \"block\";\r\n    }\r\n    hidePassword() {\r\n        const passwordInput = document.querySelector('.change-password');\r\n        const showPasswordIcon = document.querySelector('.fa-eye');\r\n        const hidePasswordIcon = document.querySelector('.fa-eye-slash');\r\n        passwordInput.setAttribute('type', 'password');\r\n        showPasswordIcon.style.display = \"block\";\r\n        hidePasswordIcon.style.display = \"none\";\r\n    }\r\n    showConfirmPassword() {\r\n        const confirmPasswordInput = document.querySelector('.change-password-confirm');\r\n        const showPasswordIcon = document.querySelector('.fa-eye-confirm');\r\n        const hidePasswordIcon = document.querySelector('.fa-eye-slash-confirm');\r\n        confirmPasswordInput.setAttribute('type', 'text');\r\n        showPasswordIcon.style.display = \"none\";\r\n        hidePasswordIcon.style.display = \"block\";\r\n    }\r\n    hideConfirmPassword() {\r\n        const confirmPasswordInput = document.querySelector('.change-password-confirm');\r\n        const showPasswordIcon = document.querySelector('.fa-eye-confirm');\r\n        const hidePasswordIcon = document.querySelector('.fa-eye-slash-confirm');\r\n        confirmPasswordInput.setAttribute('type', 'password');\r\n        showPasswordIcon.style.display = \"block\";\r\n        hidePasswordIcon.style.display = \"none\";\r\n    }\r\n\r\n    // Handle Submit -------------------------\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const history = createBrowserHistory();\r\n\r\n        const new_password = {\r\n            password: this.state.password,\r\n            confirmed_password: this.state.confirmed_password\r\n        }\r\n\r\n        const user_ID = localStorage.getItem('user_ID');\r\n\r\n        const response = await fetch('http://localhost:8080/reset-password/new-password/' + user_ID, {\r\n            method:\"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(new_password)\r\n        }).catch((err) => {\r\n            if(err.response.status == 404) {\r\n                history.push('/error404/not_found');\r\n                window.location.reload();\r\n            }else if(err.response.status == 500) {\r\n                history.push('/error500/internal_server_error');\r\n                window.location.reload();\r\n            }else {\r\n                history.push('/error');\r\n                window.location.reload();\r\n            }\r\n        });\r\n            const data = await response.json();\r\n\r\n            const password = document.querySelector('.change-password');\r\n            const confirmed_password = document.querySelector('.change-password-confirm');\r\n\r\n            if(data.password) {\r\n                password.classList.add('missing-field');\r\n                this.setState({password_errors: data.password.msg});\r\n            }\r\n            if(data.confirmed_password) {\r\n                confirmed_password.classList.add('missing-field');\r\n                this.setState({confirmed_password_errors: data.confirmed_password.msg})\r\n            }\r\n            if(data.no_match) {\r\n                password.classList.add('missing-field');\r\n                confirmed_password.classList.add('missing-field');\r\n                this.setState({passwords_match: data.no_match})\r\n            }\r\n            if(data.message == 'Password Updated') {\r\n                history.push('/reset-password/new-password/successfully-reset/' + user_ID);\r\n                window.location.reload();\r\n            }\r\n        }\r\n\r\n    handleChange(e) {\r\n        const password = document.querySelector('.change-password');\r\n        const confirmed_password = document.querySelector('.change-password-confirm');\r\n        this.setState({[e.target.name]: e.target.value});\r\n        if(e.target.name == 'password') {\r\n            this.setState({password_errors: ''});\r\n            this.setState({passwords_match: ''});\r\n            password.classList.remove('missing-field');\r\n            confirmed_password.classList.remove('missing-field');\r\n\r\n        }\r\n        if(e.target.name == 'confirmed_password') {\r\n            this.setState({confirmed_password_errors: ''});\r\n            this.setState({passwords_match: ''});\r\n            password.classList.remove('missing-field');\r\n            confirmed_password.classList.remove('missing-field');\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        document.body.style.background = \"#adebad\";\r\n        return (\r\n            <div className=\"container mx-auto\" style={{width:420 + 'px', marginTop:100 + 'px'}}>\r\n                <h1 className=\"change-password-title\">Change Password</h1>\r\n                <h5 className=\"change-password-subtitle\"> Type in a new password:</h5>\r\n                    <form onSubmit={this.handleSubmit} autoComplete=\"off\" className=\"form-group\" id=\"resetForm\"> \r\n                        <i className=\"fa fa-eye\" onClick={this.showPassword}></i>\r\n                        <i className=\"fa fa-eye-slash\" id=\"hidePassword\" onClick={this.hidePassword}></i>\r\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} className=\"form-control change-password\" id=\"exampleInputPassword1\" placeholder=\"New Password\" />\r\n                        <p className=\"empty-field\">{this.state.password_errors}</p>\r\n                        <i className=\"fa fa-eye fa-eye-confirm\" onClick={this.showConfirmPassword}></i>\r\n                        <i className=\"fa fa-eye-slash fa-eye-slash-confirm\" id=\"hidePassword\" onClick={this.hideConfirmPassword}></i>\r\n                        <input type=\"password\" name=\"confirmed_password\" value={this.state.confirmed_password} onChange={this.handleChange} className=\"form-control change-password-confirm\" id=\"exampleInputPassword1\" placeholder=\"Confirm New Password\" />\r\n                        <p className=\"empty-field\">{this.state.confirmed_password_errors}</p>\r\n                        <p className=\"empty-field\">{this.state.passwords_match}</p>\r\n                        <button type=\"submit\" className=\"btn btn-success\" id=\"resetBtn\">Reset</button>\r\n                    </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}