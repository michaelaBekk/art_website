{"ast":null,"code":"'use strict';\n\nvar assert = require('assert');\n\nvar constantinople = require('constantinople');\n\nvar runtime = require('pug-runtime');\n\nvar stringify = require('js-stringify');\n\nfunction isConstant(src) {\n  return constantinople(src, {\n    pug: runtime,\n    pug_interp: undefined\n  });\n}\n\nfunction toConstant(src) {\n  return constantinople.toConstant(src, {\n    pug: runtime,\n    pug_interp: undefined\n  });\n}\n\nmodule.exports = compileAttrs;\n/**\n * options:\n *  - terse\n *  - runtime\n *  - format ('html' || 'object')\n */\n\nfunction compileAttrs(attrs, options) {\n  assert(Array.isArray(attrs), 'Attrs should be an array');\n  assert(attrs.every(function (attr) {\n    return attr && typeof attr === 'object' && typeof attr.name === 'string' && (typeof attr.val === 'string' || typeof attr.val === 'boolean') && typeof attr.mustEscape === 'boolean';\n  }), 'All attributes should be supplied as an object of the form {name, val, mustEscape}');\n  assert(options && typeof options === 'object', 'Options should be an object');\n  assert(typeof options.terse === 'boolean', 'Options.terse should be a boolean');\n  assert(typeof options.runtime === 'function', 'Options.runtime should be a function that takes a runtime function name and returns the source code that will evaluate to that function at runtime');\n  assert(options.format === 'html' || options.format === 'object', 'Options.format should be \"html\" or \"object\"');\n  var buf = [];\n  var classes = [];\n  var classEscaping = [];\n\n  function addAttribute(key, val, mustEscape, buf) {\n    if (isConstant(val)) {\n      if (options.format === 'html') {\n        var str = stringify(runtime.attr(key, toConstant(val), mustEscape, options.terse));\n        var last = buf[buf.length - 1];\n\n        if (last && last[last.length - 1] === str[0]) {\n          buf[buf.length - 1] = last.substr(0, last.length - 1) + str.substr(1);\n        } else {\n          buf.push(str);\n        }\n      } else {\n        val = toConstant(val);\n\n        if (mustEscape) {\n          val = runtime.escape(val);\n        }\n\n        buf.push(stringify(key) + ': ' + stringify(val));\n      }\n    } else {\n      if (options.format === 'html') {\n        buf.push(options.runtime('attr') + '(\"' + key + '\", ' + val + ', ' + stringify(mustEscape) + ', ' + stringify(options.terse) + ')');\n      } else {\n        if (mustEscape) {\n          val = options.runtime('escape') + '(' + val + ')';\n        }\n\n        buf.push(stringify(key) + ': ' + val);\n      }\n    }\n  }\n\n  attrs.forEach(function (attr) {\n    var key = attr.name;\n    var val = attr.val;\n    var mustEscape = attr.mustEscape;\n\n    if (key === 'class') {\n      classes.push(val);\n      classEscaping.push(mustEscape);\n    } else {\n      if (key === 'style') {\n        if (isConstant(val)) {\n          val = stringify(runtime.style(toConstant(val)));\n        } else {\n          val = options.runtime('style') + '(' + val + ')';\n        }\n      }\n\n      addAttribute(key, val, mustEscape, buf);\n    }\n  });\n  var classesBuf = [];\n\n  if (classes.length) {\n    if (classes.every(isConstant)) {\n      addAttribute('class', stringify(runtime.classes(classes.map(toConstant), classEscaping)), false, classesBuf);\n    } else {\n      classes = classes.map(function (cls, i) {\n        if (isConstant(cls)) {\n          cls = stringify(classEscaping[i] ? runtime.escape(toConstant(cls)) : toConstant(cls));\n          classEscaping[i] = false;\n        }\n\n        return cls;\n      });\n      addAttribute('class', options.runtime('classes') + '([' + classes.join(',') + '], ' + stringify(classEscaping) + ')', false, classesBuf);\n    }\n  }\n\n  buf = classesBuf.concat(buf);\n  if (options.format === 'html') return buf.length ? buf.join('+') : '\"\"';else return '{' + buf.join(',') + '}';\n}","map":{"version":3,"sources":["C:/Users/bekke/Documents/Art Website/node_modules/pug-attrs/index.js"],"names":["assert","require","constantinople","runtime","stringify","isConstant","src","pug","pug_interp","undefined","toConstant","module","exports","compileAttrs","attrs","options","Array","isArray","every","attr","name","val","mustEscape","terse","format","buf","classes","classEscaping","addAttribute","key","str","last","length","substr","push","escape","forEach","style","classesBuf","map","cls","i","join","concat"],"mappings":"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","sourcesContent":["'use strict';\n\nvar assert = require('assert');\nvar constantinople = require('constantinople');\nvar runtime = require('pug-runtime');\nvar stringify = require('js-stringify');\n\nfunction isConstant(src) {\n  return constantinople(src, {pug: runtime, pug_interp: undefined});\n}\nfunction toConstant(src) {\n  return constantinople.toConstant(src, {pug: runtime, pug_interp: undefined});\n}\n\nmodule.exports = compileAttrs;\n/**\n * options:\n *  - terse\n *  - runtime\n *  - format ('html' || 'object')\n */\nfunction compileAttrs(attrs, options) {\n  assert(Array.isArray(attrs), 'Attrs should be an array');\n  assert(\n    attrs.every(function(attr) {\n      return (\n        attr &&\n        typeof attr === 'object' &&\n        typeof attr.name === 'string' &&\n        (typeof attr.val === 'string' || typeof attr.val === 'boolean') &&\n        typeof attr.mustEscape === 'boolean'\n      );\n    }),\n    'All attributes should be supplied as an object of the form {name, val, mustEscape}'\n  );\n  assert(options && typeof options === 'object', 'Options should be an object');\n  assert(\n    typeof options.terse === 'boolean',\n    'Options.terse should be a boolean'\n  );\n  assert(\n    typeof options.runtime === 'function',\n    'Options.runtime should be a function that takes a runtime function name and returns the source code that will evaluate to that function at runtime'\n  );\n  assert(\n    options.format === 'html' || options.format === 'object',\n    'Options.format should be \"html\" or \"object\"'\n  );\n\n  var buf = [];\n  var classes = [];\n  var classEscaping = [];\n\n  function addAttribute(key, val, mustEscape, buf) {\n    if (isConstant(val)) {\n      if (options.format === 'html') {\n        var str = stringify(\n          runtime.attr(key, toConstant(val), mustEscape, options.terse)\n        );\n        var last = buf[buf.length - 1];\n        if (last && last[last.length - 1] === str[0]) {\n          buf[buf.length - 1] = last.substr(0, last.length - 1) + str.substr(1);\n        } else {\n          buf.push(str);\n        }\n      } else {\n        val = toConstant(val);\n        if (mustEscape) {\n          val = runtime.escape(val);\n        }\n        buf.push(stringify(key) + ': ' + stringify(val));\n      }\n    } else {\n      if (options.format === 'html') {\n        buf.push(\n          options.runtime('attr') +\n            '(\"' +\n            key +\n            '\", ' +\n            val +\n            ', ' +\n            stringify(mustEscape) +\n            ', ' +\n            stringify(options.terse) +\n            ')'\n        );\n      } else {\n        if (mustEscape) {\n          val = options.runtime('escape') + '(' + val + ')';\n        }\n        buf.push(stringify(key) + ': ' + val);\n      }\n    }\n  }\n\n  attrs.forEach(function(attr) {\n    var key = attr.name;\n    var val = attr.val;\n    var mustEscape = attr.mustEscape;\n\n    if (key === 'class') {\n      classes.push(val);\n      classEscaping.push(mustEscape);\n    } else {\n      if (key === 'style') {\n        if (isConstant(val)) {\n          val = stringify(runtime.style(toConstant(val)));\n        } else {\n          val = options.runtime('style') + '(' + val + ')';\n        }\n      }\n      addAttribute(key, val, mustEscape, buf);\n    }\n  });\n  var classesBuf = [];\n  if (classes.length) {\n    if (classes.every(isConstant)) {\n      addAttribute(\n        'class',\n        stringify(runtime.classes(classes.map(toConstant), classEscaping)),\n        false,\n        classesBuf\n      );\n    } else {\n      classes = classes.map(function(cls, i) {\n        if (isConstant(cls)) {\n          cls = stringify(\n            classEscaping[i] ? runtime.escape(toConstant(cls)) : toConstant(cls)\n          );\n          classEscaping[i] = false;\n        }\n        return cls;\n      });\n      addAttribute(\n        'class',\n        options.runtime('classes') +\n          '([' +\n          classes.join(',') +\n          '], ' +\n          stringify(classEscaping) +\n          ')',\n        false,\n        classesBuf\n      );\n    }\n  }\n  buf = classesBuf.concat(buf);\n  if (options.format === 'html') return buf.length ? buf.join('+') : '\"\"';\n  else return '{' + buf.join(',') + '}';\n}\n"]},"metadata":{},"sourceType":"script"}