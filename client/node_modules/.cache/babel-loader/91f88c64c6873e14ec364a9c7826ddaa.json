{"ast":null,"code":"'use strict';\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\n\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;\n      var valB = pug_style(b[key]);\n      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n}\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\n\n\nexports.classes = pug_classes;\n\nfunction pug_classes_array(val, escaping) {\n  var classString = '',\n      className,\n      padding = '',\n      escapeEnabled = Array.isArray(escaping);\n\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n\n  return classString;\n}\n\nfunction pug_classes_object(val) {\n  var classString = '',\n      padding = '';\n\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n\n  return classString;\n}\n\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\n\nexports.style = pug_style;\n\nfunction pug_style(val) {\n  if (!val) return '';\n\n  if (typeof val === 'object') {\n    var out = '';\n\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n\n    return out;\n  } else {\n    return val + '';\n  }\n}\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\n\n\nexports.attr = pug_attr;\n\nfunction pug_attr(key, val, escaped, terse) {\n  if (val === false || val == null || !val && (key === 'class' || key === 'style')) {\n    return '';\n  }\n\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n\n  var type = typeof val;\n\n  if ((type === 'object' || type === 'function') && typeof val.toJSON === 'function') {\n    val = val.toJSON();\n  }\n\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + \"='\" + val.replace(/'/g, '&#39;') + \"'\";\n    }\n  }\n\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n}\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\n\n\nexports.attrs = pug_attrs;\n\nfunction pug_attrs(obj, terse) {\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n}\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\n\nfunction pug_escape(_html) {\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n  var result = '';\n  var i, lastIndex, escape;\n\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34:\n        escape = '&quot;';\n        break;\n\n      case 38:\n        escape = '&amp;';\n        break;\n\n      case 60:\n        escape = '&lt;';\n        break;\n\n      case 62:\n        escape = '&gt;';\n        break;\n\n      default:\n        continue;\n    }\n\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);else return result;\n}\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\n\nexports.rethrow = pug_rethrow;\n\nfunction pug_rethrow(err, filename, lineno, str) {\n  if (!(err instanceof Error)) throw err;\n\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n\n  try {\n    str = str || require('fs').readFileSync(filename, 'utf8');\n  } catch (ex) {\n    pug_rethrow(err, null, lineno);\n  }\n\n  var context = 3,\n      lines = str.split('\\n'),\n      start = Math.max(lineno - context, 0),\n      end = Math.min(lines.length, lineno + context); // Error context\n\n  var context = lines.slice(start, end).map(function (line, i) {\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ') + curr + '| ' + line;\n  }).join('\\n'); // Alter exception message\n\n  err.path = filename;\n\n  try {\n    err.message = (filename || 'Pug') + ':' + lineno + '\\n' + context + '\\n\\n' + err.message;\n  } catch (e) {}\n\n  throw err;\n}","map":{"version":3,"sources":["C:/Users/bekke/Documents/Art Website/node_modules/pug-runtime/index.js"],"names":["pug_has_own_property","Object","prototype","hasOwnProperty","exports","merge","pug_merge","a","b","arguments","length","attrs","i","key","valA","Array","isArray","concat","pug_style","valB","classes","pug_classes","pug_classes_array","val","escaping","classString","className","padding","escapeEnabled","pug_escape","pug_classes_object","call","style","out","attr","pug_attr","escaped","terse","type","toJSON","JSON","stringify","indexOf","replace","pug_attrs","obj","pug_match_html","escape","_html","html","regexResult","exec","result","lastIndex","index","charCodeAt","substring","rethrow","pug_rethrow","err","filename","lineno","str","Error","window","message","require","readFileSync","ex","context","lines","split","start","Math","max","end","min","slice","map","line","curr","join","path","e"],"mappings":"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","sourcesContent":["'use strict';\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;\n      var valB = pug_style(b[key]);\n      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n}\n\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\nexports.classes = pug_classes;\nfunction pug_classes_array(val, escaping) {\n  var classString = '',\n    className,\n    padding = '',\n    escapeEnabled = Array.isArray(escaping);\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n  return classString;\n}\nfunction pug_classes_object(val) {\n  var classString = '',\n    padding = '';\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n  return classString;\n}\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\nexports.style = pug_style;\nfunction pug_style(val) {\n  if (!val) return '';\n  if (typeof val === 'object') {\n    var out = '';\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n    return out;\n  } else {\n    return val + '';\n  }\n}\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = pug_attr;\nfunction pug_attr(key, val, escaped, terse) {\n  if (\n    val === false ||\n    val == null ||\n    (!val && (key === 'class' || key === 'style'))\n  ) {\n    return '';\n  }\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n  var type = typeof val;\n  if (\n    (type === 'object' || type === 'function') &&\n    typeof val.toJSON === 'function'\n  ) {\n    val = val.toJSON();\n  }\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + \"='\" + val.replace(/'/g, '&#39;') + \"'\";\n    }\n  }\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n}\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\nexports.attrs = pug_attrs;\nfunction pug_attrs(obj, terse) {\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n}\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\nfunction pug_escape(_html) {\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n\n  var result = '';\n  var i, lastIndex, escape;\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34:\n        escape = '&quot;';\n        break;\n      case 38:\n        escape = '&amp;';\n        break;\n      case 60:\n        escape = '&lt;';\n        break;\n      case 62:\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);\n  else return result;\n}\n\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\nexports.rethrow = pug_rethrow;\nfunction pug_rethrow(err, filename, lineno, str) {\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str = str || require('fs').readFileSync(filename, 'utf8');\n  } catch (ex) {\n    pug_rethrow(err, null, lineno);\n  }\n  var context = 3,\n    lines = str.split('\\n'),\n    start = Math.max(lineno - context, 0),\n    end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines\n    .slice(start, end)\n    .map(function(line, i) {\n      var curr = i + start + 1;\n      return (curr == lineno ? '  > ' : '    ') + curr + '| ' + line;\n    })\n    .join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  try {\n    err.message =\n      (filename || 'Pug') +\n      ':' +\n      lineno +\n      '\\n' +\n      context +\n      '\\n\\n' +\n      err.message;\n  } catch (e) {}\n  throw err;\n}\n"]},"metadata":{},"sourceType":"script"}