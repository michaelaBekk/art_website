{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar assert = require('assert');\n\nvar Promise = require('promise');\n\nvar isPromise = require('is-promise');\n\nvar tr = module.exports = function (transformer) {\n  return new Transformer(transformer);\n};\n\ntr.Transformer = Transformer;\ntr.normalizeFn = normalizeFn;\ntr.normalizeFnAsync = normalizeFnAsync;\ntr.normalize = normalize;\ntr.normalizeAsync = normalizeAsync;\n\nif (fs.readFile) {\n  tr.readFile = Promise.denodeify(fs.readFile);\n  tr.readFileSync = fs.readFileSync;\n} else {\n  tr.readFile = function () {\n    throw new Error('fs.readFile unsupported');\n  };\n\n  tr.readFileSync = function () {\n    throw new Error('fs.readFileSync unsupported');\n  };\n}\n\nfunction normalizeFn(result) {\n  if (typeof result === 'function') {\n    return {\n      fn: result,\n      dependencies: []\n    };\n  } else if (result && typeof result === 'object' && typeof result.fn === 'function') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\n\nfunction normalizeFnAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.fn)) {\n      return result.fn.then(function (fn) {\n        result.fn = fn;\n        return result;\n      });\n    }\n\n    return result;\n  }).then(tr.normalizeFn).nodeify(cb);\n}\n\nfunction normalize(result) {\n  if (typeof result === 'string') {\n    return {\n      body: result,\n      dependencies: []\n    };\n  } else if (result && typeof result === 'object' && typeof result.body === 'string') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\n\nfunction normalizeAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.body)) {\n      return result.body.then(function (body) {\n        result.body = body;\n        return result;\n      });\n    }\n\n    return result;\n  }).then(tr.normalize).nodeify(cb);\n}\n\nfunction Transformer(tr) {\n  assert(tr, 'Transformer must be an object');\n  assert(typeof tr.name === 'string', 'Transformer must have a name');\n  assert(typeof tr.outputFormat === 'string', 'Transformer must have an output format');\n  assert(['compile', 'compileAsync', 'compileFile', 'compileFileAsync', 'compileClient', 'compileClientAsync', 'compileFileClient', 'compileFileClientAsync', 'render', 'renderAsync', 'renderFile', 'renderFileAsync'].some(function (method) {\n    return typeof tr[method] === 'function';\n  }), 'Transformer must implement at least one of the potential methods.');\n  this._tr = tr;\n  this.name = this._tr.name;\n  this.outputFormat = this._tr.outputFormat;\n  this.inputFormats = this._tr.inputFormats || [this.name];\n}\n\nvar fallbacks = {\n  compile: ['compile', 'render'],\n  compileAsync: ['compileAsync', 'compile', 'render'],\n  compileFile: ['compileFile', 'compile', 'renderFile', 'render'],\n  compileFileAsync: ['compileFileAsync', 'compileFile', 'compileAsync', 'compile', 'renderFile', 'render'],\n  compileClient: ['compileClient'],\n  compileClientAsync: ['compileClientAsync', 'compileClient'],\n  compileFileClient: ['compileFileClient', 'compileClient'],\n  compileFileClientAsync: ['compileFileClientAsync', 'compileFileClient', 'compileClientAsync', 'compileClient'],\n  render: ['render', 'compile'],\n  renderAsync: ['renderAsync', 'render', 'compileAsync', 'compile'],\n  renderFile: ['renderFile', 'render', 'compileFile', 'compile'],\n  renderFileAsync: ['renderFileAsync', 'renderFile', 'renderAsync', 'render', 'compileFileAsync', 'compileFile', 'compileAsync', 'compile']\n};\n\nTransformer.prototype._hasMethod = function (method) {\n  return typeof this._tr[method] === 'function';\n};\n\nTransformer.prototype.can = function (method) {\n  return fallbacks[method].some(function (method) {\n    return this._hasMethod(method);\n  }.bind(this));\n};\n/* COMPILE */\n\n\nTransformer.prototype.compile = function (str, options) {\n  if (!this._hasMethod('compile')) {\n    if (this.can('render')) {\n      var _this = this;\n\n      return {\n        fn: function (locals) {\n          return tr.normalize(_this._tr.render(str, options, locals)).body;\n        },\n        dependencies: []\n      };\n    }\n\n    if (this.can('compileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n    } else if (this.can('compileFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling plain strings');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compilation');\n    }\n  }\n\n  return tr.normalizeFn(this._tr.compile(str, options));\n};\n\nTransformer.prototype.compileAsync = function (str, options, cb) {\n  if (!this.can('compileAsync')) {\n    // compileFile* || renderFile* || renderAsync || compile*Client*\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling plain strings')).nodeify(cb);\n  }\n\n  if (this._hasMethod('compileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileAsync(str, options), cb);\n  } else {\n    // render || compile\n    return tr.normalizeFnAsync(this.compile(str, options), cb);\n  }\n};\n\nTransformer.prototype.compileFile = function (filename, options) {\n  if (!this.can('compileFile')) {\n    // compile*Client* || compile*Async || render*Async\n    throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n  }\n\n  if (this._hasMethod('compileFile')) {\n    return tr.normalizeFn(this._tr.compileFile(filename, options));\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeFn(function (locals) {\n      return tr.normalize(this._tr.renderFile(filename, options, locals)).body;\n    }.bind(this));\n  } else {\n    // render || compile\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return this.compile(tr.readFileSync(filename, 'utf8'), options);\n  }\n};\n\nTransformer.prototype.compileFileAsync = function (filename, options, cb) {\n  if (!this.can('compileFileAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compilation'));\n  }\n\n  if (this._hasMethod('compileFileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileFileAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFile') || this._hasMethod('renderFile')) {\n    return tr.normalizeFnAsync(this.compileFile(filename, options), cb);\n  } else {\n    // compileAsync || compile || render\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeFnAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileAsync')) {\n        return this._tr.compileAsync(str, options);\n      } else {\n        // compile || render\n        return this.compile(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n/* COMPILE CLIENT */\n\n\nTransformer.prototype.compileClient = function (str, options) {\n  if (!this.can('compileClient')) {\n    if (this.can('compileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n\n  return tr.normalize(this._tr.compileClient(str, options));\n};\n\nTransformer.prototype.compileClientAsync = function (str, options, cb) {\n  if (!this.can('compileClientAsync')) {\n    if (this.can('compileFileClientAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb);\n    }\n  }\n\n  if (this._hasMethod('compileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileClientAsync(str, options), cb);\n  } else {\n    return tr.normalizeAsync(this._tr.compileClient(str, options), cb);\n  }\n};\n\nTransformer.prototype.compileFileClient = function (filename, options) {\n  if (!this.can('compileFileClient')) {\n    if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n\n  if (this._hasMethod('compileFileClient')) {\n    return tr.normalize(this._tr.compileFileClient(filename, options));\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.compileClient(tr.readFileSync(filename, 'utf8'), options));\n  }\n};\n\nTransformer.prototype.compileFileClientAsync = function (filename, options, cb) {\n  if (!this.can('compileFileClientAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb);\n  }\n\n  if (this._hasMethod('compileFileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileFileClientAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFileClient')) {\n    return tr.normalizeAsync(this._tr.compileFileClient(filename, options), cb);\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileClientAsync')) {\n        return this._tr.compileClientAsync(str, options);\n      } else {\n        return this._tr.compileClient(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n/* RENDER */\n\n\nTransformer.prototype.render = function (str, options, locals) {\n  if (!this.can('render')) {\n    if (this.can('renderAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    } else if (this.can('renderFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering');\n    }\n  }\n\n  if (this._hasMethod('render')) {\n    return tr.normalize(this._tr.render(str, options, locals));\n  } else {\n    var compiled = tr.normalizeFn(this._tr.compile(str, options));\n    var body = compiled.fn(locals || options);\n\n    if (typeof body !== 'string') {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    }\n\n    return tr.normalize({\n      body: body,\n      dependencies: compiled.dependencies\n    });\n  }\n};\n\nTransformer.prototype.renderAsync = function (str, options, locals, cb) {\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n\n  if (!this.can('renderAsync')) {\n    if (this.can('renderFileAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering')).nodeify(cb);\n    }\n  }\n\n  if (this._hasMethod('renderAsync')) {\n    return tr.normalizeAsync(this._tr.renderAsync(str, options, locals), cb);\n  } else if (this._hasMethod('render')) {\n    return tr.normalizeAsync(this._tr.render(str, options, locals), cb);\n  } else {\n    return tr.normalizeAsync(this.compileAsync(str, options).then(function (compiled) {\n      return {\n        body: compiled.fn(locals || options),\n        dependencies: compiled.dependencies\n      };\n    }), cb);\n  }\n};\n\nTransformer.prototype.renderFile = function (filename, options, locals) {\n  if (!this.can('renderFile')) {\n    // *Async, *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n  }\n\n  if (this._hasMethod('renderFile')) {\n    return tr.normalize(this._tr.renderFile(filename, options, locals));\n  } else if (this._hasMethod('render')) {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.render(tr.readFileSync(filename, 'utf8'), options, locals));\n  } else {\n    // compile || compileFile\n    var compiled = this.compileFile(filename, options);\n    return tr.normalize({\n      body: compiled.fn(locals || options),\n      dependencies: compiled.dependencies\n    });\n  }\n};\n\nTransformer.prototype.renderFileAsync = function (filename, options, locals, cb) {\n  if (!this.can('renderFileAsync')) {\n    // *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering.');\n  }\n\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n\n  if (this._hasMethod('renderFileAsync')) {\n    return tr.normalizeAsync(this._tr.renderFileAsync(filename, options, locals), cb);\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeAsync(this._tr.renderFile(filename, options, locals), cb);\n  } else if (this._hasMethod('compile') || this._hasMethod('compileAsync') || this._hasMethod('compileFile') || this._hasMethod('compileFileAsync')) {\n    return tr.normalizeAsync(this.compileFileAsync(filename, options).then(function (compiled) {\n      return {\n        body: compiled.fn(locals || options),\n        dependencies: compiled.dependencies\n      };\n    }), cb);\n  } else {\n    // render || renderAsync\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      return this.renderAsync(str, options, locals);\n    }.bind(this)), cb);\n  }\n};","map":{"version":3,"sources":["C:/Users/bekke/Documents/Art Website/node_modules/jstransformer/index.js"],"names":["fs","require","assert","Promise","isPromise","tr","module","exports","transformer","Transformer","normalizeFn","normalizeFnAsync","normalize","normalizeAsync","readFile","denodeify","readFileSync","Error","result","fn","dependencies","Array","isArray","cb","resolve","then","nodeify","body","name","outputFormat","some","method","_tr","inputFormats","fallbacks","compile","compileAsync","compileFile","compileFileAsync","compileClient","compileClientAsync","compileFileClient","compileFileClientAsync","render","renderAsync","renderFile","renderFileAsync","prototype","_hasMethod","can","bind","str","options","_this","locals","reject","filename","undefined","compiled"],"mappings":"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","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar assert = require('assert');\nvar Promise = require('promise');\nvar isPromise = require('is-promise');\n\nvar tr = (module.exports = function (transformer) {\n  return new Transformer(transformer);\n});\ntr.Transformer = Transformer;\ntr.normalizeFn = normalizeFn;\ntr.normalizeFnAsync = normalizeFnAsync;\ntr.normalize = normalize;\ntr.normalizeAsync = normalizeAsync;\nif (fs.readFile) {\n  tr.readFile = Promise.denodeify(fs.readFile);\n  tr.readFileSync = fs.readFileSync;\n} else {\n  tr.readFile = function () { throw new Error('fs.readFile unsupported'); };\n  tr.readFileSync = function () { throw new Error('fs.readFileSync unsupported'); };\n}\n\nfunction normalizeFn(result) {\n  if (typeof result === 'function') {\n    return {fn: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.fn === 'function') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeFnAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.fn)) {\n      return result.fn.then(function (fn) {\n        result.fn = fn;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalizeFn).nodeify(cb);\n}\nfunction normalize(result) {\n  if (typeof result === 'string') {\n    return {body: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.body === 'string') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.body)) {\n      return result.body.then(function (body) {\n        result.body = body;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalize).nodeify(cb);\n}\n\nfunction Transformer(tr) {\n  assert(tr, 'Transformer must be an object');\n  assert(typeof tr.name === 'string', 'Transformer must have a name');\n  assert(typeof tr.outputFormat === 'string', 'Transformer must have an output format');\n  assert([\n    'compile',\n    'compileAsync',\n    'compileFile',\n    'compileFileAsync',\n    'compileClient',\n    'compileClientAsync',\n    'compileFileClient',\n    'compileFileClientAsync',\n    'render',\n    'renderAsync',\n    'renderFile',\n    'renderFileAsync'\n  ].some(function (method) {\n    return typeof tr[method] === 'function';\n  }), 'Transformer must implement at least one of the potential methods.');\n  this._tr = tr;\n  this.name = this._tr.name;\n  this.outputFormat = this._tr.outputFormat;\n  this.inputFormats = this._tr.inputFormats || [this.name];\n}\n\nvar fallbacks = {\n  compile: ['compile', 'render'],\n  compileAsync: ['compileAsync', 'compile', 'render'],\n  compileFile: ['compileFile', 'compile', 'renderFile', 'render'],\n  compileFileAsync: [\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile',\n    'renderFile', 'render'\n  ],\n  compileClient: ['compileClient'],\n  compileClientAsync: ['compileClientAsync', 'compileClient'],\n  compileFileClient: ['compileFileClient', 'compileClient'],\n  compileFileClientAsync: [\n    'compileFileClientAsync', 'compileFileClient', 'compileClientAsync', 'compileClient'\n  ],\n  render: ['render', 'compile'],\n  renderAsync: ['renderAsync', 'render', 'compileAsync', 'compile'],\n  renderFile: ['renderFile', 'render', 'compileFile', 'compile'],\n  renderFileAsync: [\n    'renderFileAsync', 'renderFile', 'renderAsync', 'render',\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile'\n  ]\n};\n\nTransformer.prototype._hasMethod = function (method) {\n  return typeof this._tr[method] === 'function';\n};\nTransformer.prototype.can = function (method) {\n  return fallbacks[method].some(function (method) {\n    return this._hasMethod(method);\n  }.bind(this));\n};\n\n/* COMPILE */\n\nTransformer.prototype.compile = function (str, options) {\n  if (!this._hasMethod('compile')) {\n    if (this.can('render')) {\n      var _this = this;\n      return {\n        fn: function (locals) {\n          return tr.normalize(_this._tr.render(str, options, locals)).body;\n        },\n        dependencies: []\n      };\n    }\n    if (this.can('compileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n    } else if (this.can('compileFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling plain strings');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compilation');\n    }\n  }\n  return tr.normalizeFn(this._tr.compile(str, options));\n};\nTransformer.prototype.compileAsync = function (str, options, cb) {\n  if (!this.can('compileAsync')) { // compileFile* || renderFile* || renderAsync || compile*Client*\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling plain strings')).nodeify(cb);\n  }\n  if (this._hasMethod('compileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileAsync(str, options), cb);\n  } else { // render || compile\n    return tr.normalizeFnAsync(this.compile(str, options), cb);\n  }\n};\nTransformer.prototype.compileFile = function (filename, options) {\n  if (!this.can('compileFile')) { // compile*Client* || compile*Async || render*Async\n    throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n  }\n  if (this._hasMethod('compileFile')) {\n    return tr.normalizeFn(this._tr.compileFile(filename, options));\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeFn(function (locals) {\n      return tr.normalize(this._tr.renderFile(filename, options, locals)).body;\n    }.bind(this));\n  } else { // render || compile\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return this.compile(tr.readFileSync(filename, 'utf8'), options);\n  }\n};\nTransformer.prototype.compileFileAsync = function (filename, options, cb) {\n  if (!this.can('compileFileAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compilation'));\n  }\n  if (this._hasMethod('compileFileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileFileAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFile') || this._hasMethod('renderFile')) {\n    return tr.normalizeFnAsync(this.compileFile(filename, options), cb);\n  } else { // compileAsync || compile || render\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeFnAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileAsync')) {\n        return this._tr.compileAsync(str, options);\n      } else { // compile || render\n        return this.compile(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* COMPILE CLIENT */\n\n\nTransformer.prototype.compileClient = function (str, options) {\n  if (!this.can('compileClient')) {\n    if (this.can('compileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  return tr.normalize(this._tr.compileClient(str, options));\n};\nTransformer.prototype.compileClientAsync = function (str, options, cb) {\n  if (!this.can('compileClientAsync')) {\n    if (this.can('compileFileClientAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('compileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileClientAsync(str, options), cb);\n  } else {\n    return tr.normalizeAsync(this._tr.compileClient(str, options), cb);\n  }\n};\nTransformer.prototype.compileFileClient = function (filename, options) {\n  if (!this.can('compileFileClient')) {\n    if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  if (this._hasMethod('compileFileClient')) {\n    return tr.normalize(this._tr.compileFileClient(filename, options));\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.compileClient(tr.readFileSync(filename, 'utf8'), options));\n  }\n};\nTransformer.prototype.compileFileClientAsync = function (filename, options, cb) {\n  if (!this.can('compileFileClientAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb)\n  }\n  if (this._hasMethod('compileFileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileFileClientAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFileClient')) {\n    return tr.normalizeAsync(this._tr.compileFileClient(filename, options), cb);\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileClientAsync')) {\n        return this._tr.compileClientAsync(str, options);\n      } else {\n        return this._tr.compileClient(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* RENDER */\n\nTransformer.prototype.render = function (str, options, locals) {\n  if (!this.can('render')) {\n    if (this.can('renderAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    } else if (this.can('renderFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering');\n    }\n  }\n  if (this._hasMethod('render')) {\n    return tr.normalize(this._tr.render(str, options, locals));\n  } else {\n    var compiled = tr.normalizeFn(this._tr.compile(str, options));\n    var body = compiled.fn(locals || options);\n    if (typeof body !== 'string') {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    }\n    return tr.normalize({body: body, dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderAsync = function (str, options, locals, cb) {\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (!this.can('renderAsync')) {\n    if (this.can('renderFileAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('renderAsync')) {\n    return tr.normalizeAsync(this._tr.renderAsync(str, options, locals), cb);\n  } else if (this._hasMethod('render')) {\n    return tr.normalizeAsync(this._tr.render(str, options, locals), cb);\n  } else {\n    return tr.normalizeAsync(this.compileAsync(str, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  }\n};\nTransformer.prototype.renderFile = function (filename, options, locals) {\n  if (!this.can('renderFile')) { // *Async, *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n  }\n\n  if (this._hasMethod('renderFile')) {\n    return tr.normalize(this._tr.renderFile(filename, options, locals));\n  } else if (this._hasMethod('render')) {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.render(tr.readFileSync(filename, 'utf8'), options, locals));\n  } else { // compile || compileFile\n    var compiled = this.compileFile(filename, options);\n    return tr.normalize({body: compiled.fn(locals || options), dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderFileAsync = function (filename, options, locals, cb) {\n  if (!this.can('renderFileAsync')) { // *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering.');\n  }\n\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (this._hasMethod('renderFileAsync')) {\n    return tr.normalizeAsync(this._tr.renderFileAsync(filename, options, locals), cb);\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeAsync(this._tr.renderFile(filename, options, locals), cb);\n  } else if (this._hasMethod('compile') || this._hasMethod('compileAsync')\n             || this._hasMethod('compileFile') || this._hasMethod('compileFileAsync')) {\n    return tr.normalizeAsync(this.compileFileAsync(filename, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  } else { // render || renderAsync\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      return this.renderAsync(str, options, locals);\n    }.bind(this)), cb);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}